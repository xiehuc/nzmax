<?xml version="1.0" encoding="utf-8"?>
<s:Group  xmlns:fx="http://ns.adobe.com/mxml/2009"  xmlns:s="library://ns.adobe.com/flex/spark"
	width="256" height="192" creationComplete="main(event)" currentState="{Mode.objectState}"
	>
	<s:states>
		<s:State name="normal"/>
		<s:State name="object"/>
		<s:State name="inquire"/>
	</s:states>
	<fx:Script>
		<![CDATA[
			import com.greensock.TweenLite;
			
			import cont.Title_;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import nz.Transport;
			import nz.enum.Assets;
			import nz.enum.EventListBridge;
			import nz.enum.FrameInstance;
			import nz.enum.Mode;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			
			static public var error:XML;
			static public var answer:String;
			static public var currect:XML;
			
			protected function main(event:FlexEvent):void
			{
				pane.dataProvider = Transport.DisplayRoot["ObjectPane"];
				if(pane.dataProvider.length>0)
				pane_title.text = pane.dataProvider.getItemAt(0).name;
			}
			
			protected function gpane_left_buttonDownHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				if(panelay.horizontalScrollPosition>0)
					panelay.horizontalScrollPosition-=200-8;
			}
			
			protected function gpane_right_buttonDownHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				if(panelay.horizontalScrollPosition<pane.dataGroup.contentWidth - pane.width)
					panelay.horizontalScrollPosition+=200-8;
			}
			
			protected function top_r_btn_clickHandler(event:MouseEvent):void
			{
				Transport.c.replacePage(FrameInstance.ROLEFRAME);
			}
			
			protected function pane_itemRollOverHandler(event:ListEvent):void
			{
				pane_title.text = event.item.name;
			}
			
			protected function pane_changeHandler(event:IndexChangeEvent):void
			{
				Transport.c.pushPage(FrameInstance.OBJECTDETAILFRAME);
			}
			
			protected function object_click(event:MouseEvent):void
			{
				if(pane.selectedItem.linkName == answer){
					Transport.send(currect);
				}else{
					Transport.send(error);
				}
				Transport.c.popPage();
			}
			
			protected function quit_inquire_mode(event:MouseEvent):void
			{
				Transport.c.popPage();
				Mode.objectState = Mode.OBJECT_NORMAL;
			}
			
		]]>
	</fx:Script>
	<fx:Style source="../../Style.css"/>
	<s:Image id="bar_up_2_1" source="@Embed(source='../image/skins.swf',symbol='_bar.up_2_1')"
			  includeIn="normal"
			 />
	<!---@private-->
	<s:Image id="bar_up_2_2" source="@Embed(source='../image/skins.swf',symbol='_bar.up_2_2')"
			  excludeFrom="normal"
			 />
	<!---@private-->
	<s:Image id="bar_down_2_1" y="160" source="@Embed(source='../image/skins.swf',symbol='_bar.down_2_1')"
			  includeIn="normal"
			 />
	<!---@private-->
	<s:Image id="bar_down_2_2" y="160" source="@Embed(source='../image/skins.swf',symbol='_bar.down_2_2')"
			  excludeFrom="normal"
			 />
	<!---@private-->
	<s:Button id="top_m_btn" x="89" label="指证" styleName="buttonLabelStyle topMiddleButtonStyle" 
			  excludeFrom="normal" click.object="object_click(event)" 
			  click.inquire="Transport.getEvent(EventListBridge.CORRECTBUTTON_REQUEST)(pane.selectedItem.linkName);"
			   />
	<!---@private-->
	<s:Button id="top_r_btn" label="人物记录" styleName="buttonLabelStyle topRightButtonStyle" x="178" 
			  click="top_r_btn_clickHandler(event)"
			   excludeFrom="object"
			  />
	<s:Button y="162.5" label="取消" styleName="buttonLabelStyle downLeftButtonStyle" 
			  click="Transport.c.popPage();" click.inquire="quit_inquire_mode(event)"
			  excludeFrom="object"
			  />
	<!---@private-->
	<s:Button id="detail_btn" visible="false" x="178" y="162.5" label="详细" 
			   styleName="buttonLabelStyle downRightButtonStyle" />
	<s:TextInput id="pane_title" x="23" y="34" width="210" editable="false"
				 height.normal="22"/>
	<!---@private-->
	<s:List id="pane" width="200" height="100" borderVisible="false" horizontalCenter="0" skinClass="ui.skins.GridPaneSkin" horizontalScrollPolicy="off" verticalScrollPolicy="off"
			itemRenderer="ui.PaneItemRenderer" verticalCenter="9" itemRollOver="pane_itemRollOverHandler(event)" change="pane_changeHandler(event)">
		<s:layout>
			<s:TileLayout id="panelay" horizontalGap="8" paddingLeft="8" paddingTop="6" paddingRight="8" paddingBottom="6" orientation="columns"
						  requestedRowCount="2"
						  verticalGap="8"/>
		</s:layout>
	</s:List>
	<!---@private-->
	<s:Button id="gpane_left" x="15" y="60" rotationY="180" width="12" height="91" styleName="arrowButtonStyle" autoRepeat="true" buttonDown="gpane_left_buttonDownHandler(event)"/>
	<!---@private-->
	<s:Button id="gpane_right" x="241" y="60" width="12" height="91" styleName="arrowButtonStyle" autoRepeat="true" buttonDown="gpane_right_buttonDownHandler(event)"/>
</s:Group>